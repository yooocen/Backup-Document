1.32位系统指针是4B的

2.指针被free以后不会直接赋空值

3.cin是不可以使用endl和一些字符串

4.Item_base(const std::string &book = " ",double sales_price = 0.0)
:isbn(book),
price(sale_price)
{}

5.虚函数必须是基类的非静态函数

6.控制台的输入输出流中 space 和 enter代表的是在敲入这个键之间输入的东西已经是准备好了,flush

7.ANSI控制符的使用 查看这个地址:http://www.linuxidc.com/Linux/2014-02/97148.html
  ANSI控制码

简介

*ANSI控制码用于在字符显示系统中控制光标移动和字符色彩等，常用于BBS系统中。

*ANSI ESCAPE SEQUENCES又称为VT100系列控制码，国内译为ANSI控制码。顾名思义，需要VT100系列终端的支持，当然现在已经不在局限于VT100了，包括xterm,linux都能很好完成。

*ANSI控制码开始的标志都为ESC[，ESC对应ASCII码表的033(八进制)，linux命令echo用-e启用转义，\033来输入ESC，\033[31m即为ESC[31m。

 

格式

echo：-e 用来开启echo中的转义，\e 或 \033 来输出Esc符号

格式: echo -e "\033[字背景颜色;字体颜色m字符串\033[0m"

注意m后面紧跟字符串。

例如:

echo -e "\033[41;36m something here \033[0m"

其中41的位置代表底色, 36的位置是代表字的颜色

那些ascii code 是对颜色调用的始末

\033[ ; m ……\033[0m

 
*****************************************************

\033[0m 关闭所有属性

\033[1m 设置高亮度

\03[4m 下划线

\033[5m 闪烁

\033[7m 反显

\033[8m 消隐

\033[30m -- \033[37m 设置前景色

\033[40m -- \033[47m 设置背景色

\033[nA 光标上移n行

\03[nB 光标下移n行

\033[nC 光标右移n行

\033[nD 光标左移n行

\033[y;xH设置光标位置

\033[2J 清屏

\033[K 清除从光标到行尾的内容

\033[s 保存光标位置

\033[u 恢复光标位置

\033[?25l 隐藏光标

\33[?25h 显示光标

*****************************************************

字背景颜色范围:40---49
40:黑

41:深红

42:绿

43:黄色

44:蓝色

45:紫色

46:深绿

47:白色

字颜色范围:30---39
30:黑

31:红

32:绿

33:黄

34:蓝色

35:紫色

36:深绿

37:白色

*****************************************************



8.调试方法

进入方法
跳出方法
逐行最终
下一个断点(用于避开循环)

